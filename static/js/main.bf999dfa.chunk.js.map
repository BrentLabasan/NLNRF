{"version":3,"sources":["media/wut.gif","constants.js","hookUseInput.js","LocationSubmitter.js","LocationDetails.js","LatestSubmissions.js","PopularSubmissions.js","Masonry.js","App.js","GoogleMap.js","serviceWorker.js","index.js","media/pulsing3.gif","media/xu.png","media/poopandneedles.png"],"names":["module","exports","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GMAP_API_KEY","DEFAULT_MAP_CENTER","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","LocationSubmitter","props","latitude","longitude","Form","inline","Container","fluid","Row","Col","xs","Group","controlId","Label","Control","type","name","placeholder","pendingLatitude","pendingLongitude","Text","className","DropdownButton","id","title","variant","Dropdown","Item","href","e","preventDefault","handlePendingLocationNameDescription","pendingLocationNameDescription","onClick","db","collection","add","nameDescr","geopoint","firebase","GeoPoint","dateTime","moment","format","mediaUrl","then","docRef","console","log","handlePendingLatLongChange","document","getElementById","files","file","guid","uuidv4","storageRef","child","put","snapshot","getDownloadURL","url","doc","update","catch","error","size","LocationDetails","selectedLocation","src","style","maxWidth","display","border","textAlign","padding","borderRadius","color","fontWeight","width","height","alignItems","justifyContent","elLocationMedia","FormControl","InputLabel","htmlFor","Input","label","fromNow","LatestSubmissions","backgroundColor","margin","cursor","latestSubmissions","locations","slice","sort","a","b","map","loc","onMouseEnter","setIsPulseVisible","onMouseLeave","handleOnMouseLeave","listStyleType","Example","storage","_","require","GoogleMap","state","centerLat","centerLong","currentMapCenterLat","currentMapCenterLong","onMarkerClick","marker","handleMapMarkerClick","mapClicked","mapProps","clickEvent","latLng","lat","lng","nextProps","nextState","isEqual","this","currentMapCenter","key","position","locationInfo","animation","google","zoom","initialCenter","constants","center","long","isPulseVisible","pulseGeopoint","icon","pulsing","anchor","maps","Point","scaledSize","Size","Component","GoogleApiWrapper","containerStyle","MapContainer","showingInfoWindow","activeMarker","selectedPlace","pendingPicVid","usersCurrentLatLong","featuredLocationId","mobiCurrentSection","areaMenuActive","multiActive","pulseLat","pulseLong","bool","setState","handleAreaMenuChange","selection","handleMultiChange","locationNameDescription","handleMobiCurrSectionChange","onClose","getLocation","x","navigator","geolocation","getCurrentPosition","showPosition","innerHTML","coords","handleSubmit","multiGenerator","setPulseLangLong","LocationOn","fontSize","setPulseVisibility","ref","onSnapshot","querySnapshot","forEach","push","data","join","marginLeft","Grid","container","spacing","item","ButtonGroup","aria-label","disableElevation","Button","Badge","CrossUnite","alt","maxHeight","PoopAndNeedles","BottomNavigation","BottomNavigationAction","AddLocation","Photo","Favorite","AccountCircle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bf999dfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wut.9b488c89.gif\";","export const FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyCNuNDmyFCh76Wtznx7Wvp2O6WlSCZ_gYE\",\r\n    authDomain: \"nlnrf-dev.firebaseapp.com\",\r\n    databaseURL: \"https://nlnrf-dev.firebaseio.com\",\r\n    projectId: \"nlnrf-dev\",\r\n    storageBucket: \"nlnrf-dev.appspot.com\",\r\n    messagingSenderId: \"697157600851\",\r\n    appId: \"1:697157600851:web:dbc0422025a65c40c868a6\",\r\n    measurementId: \"G-PT563E34CP\"\r\n};\r\n\r\nexport const GMAP_API_KEY = 'AIzaSyCWIg0OhhYc1_DEXwPOXcBypSNgumuB5t4';\r\n\r\nexport const TEST_COORDS = [\r\n    { lat: 47.61542405962572, lng: -122.32002042939143 },\r\n    { lat: 47.618692978147344, lng: -122.32002042939143 },\r\n    { lat: 47.61875083327175, lng: -122.31817506958919 },\r\n    { lat: 47.61527941249176, lng: -122.3183038156219 }\r\n];\r\n\r\nexport const DEFAULT_MAP_CENTER = {\r\n    LAT: 47.61785407164923,\r\n    LONG: -122.31657144387441\r\n};","import { useState } from \"react\";\r\n\r\nexport default function useInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import React, { useState } from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container, Row, Col, Dropdown, DropdownButton, ToggleButtonGroup, ToggleButton, Badge } from 'react-bootstrap';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport useInput from './hookUseInput';\r\n\r\n\r\nexport default function LocationSubmitter(props) {\r\n  const { value: locationNameDescription, bind: bindLocationNameDescription, reset: resetlocationNameDescription } = useInput('');\r\n\r\n\r\n  const [location, setLocation] = useState({\r\n    latitude: 'a',\r\n    longitude: 'b'\r\n  });\r\n\r\n  const [locationName, setLocationName] = useState({\r\n    latitude: 'a',\r\n    longitude: 'b'\r\n  });\r\n\r\n  const [pendingLatLong, setPendingLatLong] = useState('a');\r\n\r\n  function NameForm(props) {\r\n    const { value, bind, reset } = useInput('');\r\n\r\n    const handleSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      alert(`Submitting Name ${value}`);\r\n      reset();\r\n    }\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" {...bind} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    debugger;\r\n    // Add a new document with a generated id.\r\n    props.db.collection(\"locations\").add({\r\n      nameDescr: props.pendingLocationNameDescription,\r\n      geopoint: new firebase.firestore.GeoPoint(props.pendingLatitude, props.pendingLongitude),\r\n      dateTime: moment().format(),\r\n      mediaUrl: null\r\n    })\r\n      .then((docRef) => {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n\r\n        // this.setState({\r\n        //   pendingLocationNameDescription: '',\r\n        //   pendingLatitude: '',\r\n        //   pendingLongitude: ''\r\n        // });\r\n\r\n        props.handlePendingLatLongChange('', '');\r\n        props.handlePendingLocationNameDescription('');\r\n\r\n\r\n        if (document.getElementById('fileSelector').files[0]) {\r\n          let file = document.getElementById('fileSelector').files[0];\r\n\r\n          const guid = uuidv4();\r\n          var pendingMediaRef = props.storageRef.child('locations/' + guid);\r\n\r\n          pendingMediaRef.put(file).then((snapshot) => {\r\n            console.log(`Media uploaded successfully :) GUID: ${guid}`);\r\n            console.log(snapshot);\r\n\r\n            document.getElementById('fileSelector').value = null;\r\n\r\n            props.storageRef.child('locations/' + guid).getDownloadURL().then((url) => {\r\n              // `url` is the download URL for 'images/stars.jpg'\r\n\r\n              /*\r\n              // This can be downloaded directly:\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.responseType = 'blob';\r\n              xhr.onload = function(event) {\r\n                var blob = xhr.response;\r\n              };\r\n              xhr.open('GET', url);\r\n              xhr.send();\r\n              */\r\n\r\n              // Or inserted into an <img> element:\r\n              // var img = document.getElementById('myimg');\r\n              // img.src = url;\r\n\r\n\r\n\r\n              var tempRef = props.db.collection(\"locations\").doc(docRef.id);\r\n\r\n              // Set the \"capital\" field of the city 'DC'\r\n              return tempRef.update({\r\n                id: docRef.id,\r\n                mediaUrl: url\r\n              })\r\n                .then(() => {\r\n                  console.log(\"Document successfully updated with the media URL :)\");\r\n                })\r\n                .catch((error) => {\r\n                  // The document probably doesn't exist.\r\n                  console.error(\"Error updating document: \", error);\r\n                });\r\n\r\n\r\n            }).catch((error) => {\r\n              // Handle any errors\r\n            });\r\n\r\n\r\n          });\r\n        }\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n\r\n  }\r\n\r\n  function changePendingLocationNameDescription(e) {\r\n    e.preventDefault();\r\n\r\n    props.handlePendingLocationNameDescription(e.target.value);\r\n  }\r\n\r\n  function inputLatLongVal() {\r\n    return props.pendingLatitude ? ( props.pendingLatitude + ', ' + props.pendingLongitude ) : '*';\r\n  }\r\n\r\n  return (\r\n\r\n    <Form inline={false}>\r\n      <Container fluid={true}>\r\n\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            STEP<br />\r\n            1\r\n      </Col>\r\n          <Col xs={2}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>LATITUDE / LONGITUDE</Form.Label>\r\n              <Form.Control type=\"text\" name=\"pendingLatitude\" placeholder=\"latitude\" value={inputLatLongVal()} />\r\n              <Form.Text className=\"text-muted\">\r\n                Click on the map to automatically fill in the lat/long coordinates.\r\n</Form.Text>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            STEP<br />\r\n            2\r\n      </Col>\r\n          <Col xs={2}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>VISUAL TYPE</Form.Label>\r\n              <DropdownButton id=\"dropdown-basic-button\" title=\"Visual Type\" variant=\"primary\">\r\n                <Dropdown.Item href=\"#/action-1\">business card</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-1\">chalk</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">sharpie</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">paint / permanent marker</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">sticker</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">poster</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">mural</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">other</Dropdown.Item>\r\n              </DropdownButton>\r\n              <Form.Text className=\"text-muted\">\r\n                Select which category best describes your medium.\r\n</Form.Text>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            STEP<br />\r\n            3\r\n      </Col>\r\n\r\n          <Col xs={2}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>LOCATION NAME / DESCRIPTION</Form.Label>\r\n              <Form.Control type=\"text\" name=\"pendingLocationNameDescription\" onChange={changePendingLocationNameDescription} value={props.pendingLocationNameDescription} placeholder=\"location name / description\" />\r\n              <Form.Text className=\"text-muted\">\r\n                example: Space Needle, Pike Place Market, Fremont Troll\r\n</Form.Text>\r\n            </Form.Group>\r\n\r\n          </Col>\r\n\r\n          <Col xs=\"auto\">\r\n            STEP<br />\r\n            4\r\n      </Col>\r\n          <Col xs={1}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>IMAGE</Form.Label>\r\n\r\n              <input type=\"file\" id=\"fileSelector\"></input>\r\n              <Form.Text className=\"text-muted\">\r\n                Only images are currently supported. Video, YouTube links, and Instagram links will be added soon!\r\n</Form.Text>\r\n\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs=\"auto\">\r\n            STEP<br />\r\n            5\r\n      </Col>\r\n          <Col xs={1}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>&nbsp;</Form.Label>\r\n              <br />\r\n              {/* <button>Submit Location</button> */}\r\n\r\n              {/* why doesn't this work? */}\r\n              <Button onClick={handleSubmit} variant=\"success\" size=\"lg\">SUBMIT LOCATION</Button>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n\r\n        </Row>\r\n      </Container>\r\n\r\n    </Form>\r\n\r\n\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, Input, OutlinedInput } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function LocationDetails(props) {\r\n\r\n\r\nfunction elLocationMedia() {\r\n    if (props.selectedLocation?.mediaUrl ) {\r\n        return <img src={props.selectedLocation.mediaUrl} style={{ maxWidth: '300px' }} />;\r\n     } else {\r\n        return <span style={{display: 'inline-flex', border: '2px solid #f5f5f5', textAlign: 'center', padding: '20px', borderRadius: '5px', color: '#9a9a9a', fontWeight: 'bold', width: '200px', height: '200px', alignItems: 'center', justifyContent: 'center'}}>\r\n            NO MEDIA SUBMITTED\r\n            </span>\r\n     }\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>LOCATION DETAILS</h3>\r\n            <br/><br/>\r\n            <div>\r\n                {/* {props.selectedLocation?.mediaUrl && <img src={props.selectedLocation.mediaUrl} style={{ maxWidth: '300px' }} />} */}\r\n                {elLocationMedia()}\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n\r\n            {props.selectedLocation?.dateTime &&                 <FormControl>\r\n                    <InputLabel htmlFor=\"component-outlined\">Name / Description</InputLabel>\r\n                    <Input id=\"component-outlined\" value={props.selectedLocation?.nameDescr} label=\"Name\" />\r\n                </FormControl>}\r\n            {/* <h4>DATETIME</h4> */}\r\n<br/>\r\n<br/>\r\n                {/* { moment(new Date()).format() } */}\r\n                {/* { props.selectedLocation?.dateTime && moment( props.selectedLocation?.dateTime ).format() } */}\r\n\r\n                {/* {props.selectedLocation?.dateTime && moment(props.selectedLocation?.dateTime).fromNow()} */}\r\n                {props.selectedLocation?.dateTime &&                 <FormControl>\r\n                    <InputLabel htmlFor=\"component-outlined\">Date & Time</InputLabel>\r\n                    <Input id=\"component-outlined\" value={moment(props.selectedLocation?.dateTime).fromNow()} label=\"Name\" />\r\n                </FormControl>}\r\n                <br/>\r\n                <br/>\r\n{/* \r\n            <h4>VISUAL TYPE</h4> */}\r\n\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"component-outlined\">Visual Type</InputLabel>\r\n                    <Input id=\"component-outlined\" value={'VALUE'} label=\"VisualType\" />\r\n                </FormControl>\r\n\r\n\r\n\r\n            {/* <h4>CHANCE THAT VISUALIZATION IS STILL RUNNING</h4>\r\n            <p>\r\n                TODO scale from 0% - 100%\r\n  </p> */}\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function LatestSubmissions(props) {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [count, setCount] = useState(0);\r\n\r\n    const listStyle = {\r\n        listStyleType: 'none',\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    };\r\n\r\n    const style = {\r\n        padding: '10px 20px 10px 20px',\r\n        border: '1px solid grey',\r\n        backgroundColor: 'grey',\r\n        borderRadius: '10px',\r\n        margin: '0 0 20px 0',\r\n        cursor: 'pointer'\r\n    };\r\n\r\n    function compare(a, b) {\r\n        // debugger;\r\n        // console.log('HMMM', moment(a.dateTime).format(), moment(b.dateTime).format());\r\n        // console.log('return value', a.dateTime > b.dateTime ? 1 : -1);\r\n        return a.dateTime < b.dateTime ? 1 : -1;\r\n    }\r\n\r\n    // debugger;\r\n    // console.table(props.locations.slice(0, 10).sort(compare));\r\n    let sorted = props.locations.slice(0, 7).sort(compare);\r\n    const latestSubmissions = sorted.map((loc) => {\r\n        // debugger;\r\n        return <li style={style}\r\n         onMouseEnter={() => handleOnMouseEnter(loc.geopoint)}\r\n         onMouseLeave={handleOnMouseLeave}>\r\n            {loc.nameDescr}\r\n            <br />\r\n            {moment(loc.dateTime).fromNow()}\r\n\r\n        </li>\r\n    });\r\n\r\n    function handleOnMouseEnter(geopoint) {\r\n        console.log('a');\r\n        props.setIsPulseVisible(true, geopoint);\r\n        // props.setPulseLagLong(geopoint);\r\n    }\r\n\r\n    function handleOnMouseLeave() {\r\n        console.log('a');\r\n        props.setIsPulseVisible(false);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button> */}\r\n\r\n            <ul style={listStyle}>\r\n                {latestSubmissions}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function Example() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    //   const [count, setCount] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            {/* <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button> */}\r\n            <p>\r\n                A feature for people to upvote their most favorite locations will be added soon.\r\n      </p>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function Example() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n//   const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      {/* <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button> */}\r\n\r\n      Masonry\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, Polygon } from 'google-maps-react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Container, Row, Col, Dropdown, DropdownButton, ToggleButtonGroup, ToggleButton, Badge } from 'react-bootstrap';\r\nimport { Grid, BottomNavigation, BottomNavigationAction, ButtonGroup, Button } from '@material-ui/core';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\r\nimport { LocationOn, AddLocation, Favorite, AccountCircle, Photo } from '@material-ui/icons';\r\nimport * as constants from './constants';\r\nimport LocationSubmitter from './LocationSubmitter';\r\nimport LocationDetails from './LocationDetails';\r\nimport LatestSubmissions from './LatestSubmissions';\r\nimport PopularSubmissions from './PopularSubmissions';\r\nimport Masonry from './Masonry';\r\n\r\nimport GoogleMap from './GoogleMap';\r\n\r\nimport CrossUnite from './media/xu.png';\r\nimport PoopAndNeedles from './media/poopandneedles.png';\r\n\r\n\r\nlet db, storage, storageRef;\r\n\r\nconst hrWidth = '25%';\r\n\r\nconst apiKey = 'AIzaSyCWIg0OhhYc1_DEXwPOXcBypSNgumuB5t4';\r\n\r\nconst containerStyle = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  height: '800px',\r\n  // textAlign: 'center',\r\n  // display: 'inline-flex',\r\n  // justifyContent: 'center'\r\n}\r\n\r\nconst mapStyles = {\r\n  width: '90%',\r\n  height: '800px'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  state = {\r\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\r\n    activeMarker: {},          //Shows the active marker upon click\r\n    selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\r\n\r\n    locations: [],\r\n\r\n    pendingLocationNameDescription: '',\r\n    pendingLatitude: '',\r\n    pendingLongitude: '',\r\n\r\n    pendingPicVid: null,\r\n\r\n    usersCurrentLatLong: null,\r\n\r\n    currentMapCenterLat: 47.61785407164923,\r\n    currentMapCenterLong: -122.31657144387441,\r\n\r\n    selectedLocation: null,\r\n\r\n    featuredLocationId: null,\r\n\r\n    mobiCurrentSection: 'add',\r\n\r\n    areaMenuActive: 'landmarks',\r\n\r\n    multiActive: 'location',\r\n\r\n    isPulseVisible: false,\r\n\r\n    pulseLat: null,\r\n    pulseLong: null,\r\n\r\n    pulseGeopoint: null\r\n  };\r\n\r\n  setIsPulseVisible = (bool, geopoint) => {\r\n    debugger;\r\n    this.setState({\r\n      isPulseVisible: bool,\r\n      pulseGeopoint: geopoint\r\n    })\r\n  }\r\n\r\n  // setPulseLagLong = (geopoint) => {\r\n  //   debugger;\r\n  //   this.setState({\r\n  //     pulseGeopoint: geopoint\r\n  //   })\r\n  // }\r\n\r\n\r\n  handleAreaMenuChange = (selection) => {\r\n    this.setState({\r\n      areaMenuActive: selection\r\n    });\r\n  }\r\n\r\n  handleMultiChange = (selection) => {\r\n    this.setState({\r\n      multiActive: selection\r\n    });\r\n  }\r\n\r\n  handlePendingLatLongChange = (lat, long) => {\r\n\r\n    this.setState({\r\n      pendingLatitude: lat,\r\n      pendingLongitude: long\r\n    });\r\n  }\r\n\r\n  handlePendingLocationNameDescription = (locationNameDescription) => {\r\n    this.setState({\r\n      pendingLocationNameDescription: locationNameDescription\r\n    });\r\n  }\r\n\r\n  handleMobiCurrSectionChange = (event, value) => {\r\n    this.setState({ mobiCurrentSection: value })\r\n  }\r\n\r\n  handleMapMarkerClick = (props, marker, e) => {\r\n\r\n    console.log(props);\r\n    console.log(marker);\r\n    console.log(e);\r\n\r\n    console.log(props.locationInfo);\r\n\r\n    this.setState({\r\n      selectedLocation: props.locationInfo\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let targetX = document.getElementById(\"demo\");\r\n\r\n    // Initialize Firebase\r\n    firebase.initializeApp(constants.FIREBASE_CONFIG);\r\n    firebase.analytics();\r\n\r\n    db = firebase.firestore();\r\n\r\n    // Get a reference to the storage service, which is used to create references in your storage bucket\r\n    storage = firebase.storage();\r\n    storageRef = storage.ref();\r\n\r\n    db.collection(\"locations\")\r\n      // .where(\"state\", \"==\", \"CA\")\r\n      .onSnapshot((querySnapshot) => {\r\n        var locations = [];\r\n        querySnapshot.forEach(function (loc) {\r\n          // locations.push(loc.data().geopoint.latitude);\r\n          locations.push(loc.data());\r\n        });\r\n        console.log(\"Current cities in CA: \", locations.join(\", \"));\r\n        this.setState({\r\n          locations: locations\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  getLocation = () => {\r\n    var x = document.getElementById(\"demo\");\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.showPosition);\r\n\r\n\r\n\r\n    } else {\r\n      x.innerHTML = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n\r\n  showPosition = (position) => {\r\n    var x = document.getElementById(\"demo\");\r\n\r\n    x.innerHTML = \"Latitude: \" + position.coords.latitude +\r\n      \"<br>Longitude: \" + position.coords.longitude;\r\n    this.setState({\r\n      currentMapCenterLat: position.coords.latitude,\r\n      currentMapCenterLong: position.coords.longitude\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Add a new document with a generated id.\r\n    db.collection(\"locations\").add({\r\n      nameDescr: this.state.pendingLocationNameDescription,\r\n      geopoint: new firebase.firestore.GeoPoint(this.state.pendingLatitude, this.state.pendingLongitude),\r\n      dateTime: moment().format(),\r\n      mediaUrl: null\r\n    })\r\n      .then((docRef) => {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n\r\n        this.setState({\r\n          pendingLocationNameDescription: '',\r\n          pendingLatitude: '',\r\n          pendingLongitude: ''\r\n        });\r\n\r\n        if (document.getElementById('fileSelector').files[0]) {\r\n          let file = document.getElementById('fileSelector').files[0];\r\n\r\n          const guid = uuidv4();\r\n          var pendingMediaRef = storageRef.child('locations/' + guid);\r\n\r\n          pendingMediaRef.put(file).then((snapshot) => {\r\n            console.log(`Media uploaded successfully :) GUID: ${guid}`);\r\n            console.log(snapshot);\r\n\r\n            document.getElementById('fileSelector').value = null;\r\n\r\n            storageRef.child('locations/' + guid).getDownloadURL().then((url) => {\r\n              // `url` is the download URL for 'images/stars.jpg'\r\n\r\n              /*\r\n              // This can be downloaded directly:\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.responseType = 'blob';\r\n              xhr.onload = function(event) {\r\n                var blob = xhr.response;\r\n              };\r\n              xhr.open('GET', url);\r\n              xhr.send();\r\n              */\r\n\r\n              // Or inserted into an <img> element:\r\n              // var img = document.getElementById('myimg');\r\n              // img.src = url;\r\n\r\n\r\n\r\n              var tempRef = db.collection(\"locations\").doc(docRef.id);\r\n\r\n              // Set the \"capital\" field of the city 'DC'\r\n              return tempRef.update({\r\n                id: docRef.id,\r\n                mediaUrl: url\r\n              })\r\n                .then(() => {\r\n                  console.log(\"Document successfully updated with the media URL :)\");\r\n                })\r\n                .catch((error) => {\r\n                  // The document probably doesn't exist.\r\n                  console.error(\"Error updating document: \", error);\r\n                });\r\n\r\n\r\n            }).catch((error) => {\r\n              // Handle any errors\r\n            });\r\n\r\n\r\n          });\r\n        }\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  multiGenerator = () => {\r\n    switch (this.state.multiActive) {\r\n      case 'latest':\r\n        return <LatestSubmissions setPulseLangLong={this.setPulseLangLong} setIsPulseVisible={this.setIsPulseVisible} locations={this.state.locations} />\r\n        break;\r\n      case 'popular':\r\n        return <PopularSubmissions locations={this.state.locations} />\r\n        break;\r\n      case 'gallery':\r\n        return <Masonry locations={this.state.locations} />\r\n        break;\r\n      case 'location':\r\n        if (this.state.selectedLocation) {\r\n          return <LocationDetails selectedLocation={this.state.selectedLocation} />\r\n        } else {\r\n          return <div style={{ display: 'inline-flex', width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }}><h3><LocationOn style={{ fontSize: 80 }} />Click on a marker to show its details.</h3></div>;\r\n        }\r\n        return\r\n        break;\r\n      // default:\r\n      // code block\r\n    }\r\n\r\n    // if (!this.state.selectedLocation) {\r\n    //   return <div style={{ display: 'inline-flex', width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }}><h3><LocationOn style={{ fontSize: 80 }} />Click on a marker to show its details.</h3></div>;\r\n    // }\r\n  }\r\n\r\n  setPulseVisibility = () => {\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    console.log(\"App.js render()\");\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <h1 id=\"heroLogo\">\r\n            NLNRF<span style={{ fontSize: '18px', marginLeft: '-15px' }} >.com</span>\r\n            &nbsp;\r\n          <span className='slogan'>NOT LEFT. NOT RIGHT. FORWARD &gt;</span>\r\n          </h1>\r\n        </header>\r\n\r\n\r\n\r\n\r\n        <br />\r\n\r\n        {/* <hr class=\"style3\" style={{width: hrWidth }} ></hr> */}\r\n\r\n\r\n        <Row>\r\n\r\n          {/* <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\" disableElevation>\r\n            <Button onClick={() => { this.handleAreaMenuChange('landmarks') }} color={this.state.areaMenuActive === 'landmarks' ? 'primary' : 'default'} disableElevation>LANDMARKS</Button>\r\n            <Button onClick={() => { this.handleAreaMenuChange('neighborhoods') }} color={this.state.areaMenuActive === 'neighborhoods' ? 'primary' : 'default'} disableElevation>NEIGHBORHOODS</Button>\r\n          </ButtonGroup> */}\r\n\r\n          {/* \r\n          {this.state.areaMenuActive === 'landmarks' && <Col>\r\n            <Navbar expand=\"lg\" bg=\"\" variant=\"\">\r\n\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n\r\n                  <NavDropdown title=\"Amazon SLU Campus\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"Seattle Center / Space Needle\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"Pike Place\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"University of Washington\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n\r\n                  <NavDropdown title=\"Seattle University\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"Community Colleges\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n\r\n            </Navbar>\r\n          </Col>}\r\n */}\r\n\r\n          {/* \r\n          {this.state.areaMenuActive === 'neighborhoods' && <Col>\r\n            <Navbar expand=\"lg\" bg=\"\" variant=\"\">\r\n\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n\r\n                  <NavDropdown title=\"Downtown\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"Capitol Hill\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  <NavDropdown title=\"First Hill\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n\r\n                  <NavDropdown title=\"Pioneer Square\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n\r\n                  <NavDropdown title=\"West Seattle\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n\r\n                  <NavDropdown title=\"Chinatown\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n\r\n                  <NavDropdown title=\"Fremont\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                </Nav>\r\n\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n\r\n            </Navbar>\r\n          </Col>\r\n          }\r\n */}\r\n\r\n        </Row>\r\n\r\n\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={6}>\r\n            <div style={containerStyle}>\r\n\r\n              {/* TODO */}\r\n\r\n              {/* <Map\r\n  google={this.props.google}\r\n  zoom={13}\r\n  style={mapStyles}\r\n  initialCenter={{\r\n    lat: this.state.currentMapCenterLat,\r\n    lng: this.state.currentMapCenterLong\r\n  }}\r\n  center={{\r\n    lat: this.state.currentMapCenterLat,\r\n    lng: this.state.currentMapCenterLong\r\n  }}\r\n  onClick={this.mapClicked}\r\n>\r\n\r\n  {locations}\r\n\r\n</Map> */}\r\n\r\n              <GoogleMap\r\n                locations={this.state.locations}\r\n                handlePendingLatLongChange={this.handlePendingLatLongChange}\r\n                handleMapMarkerClick={this.handleMapMarkerClick}\r\n                currentMapCenter={{ lat: this.state.currentMapCenterLat, long: this.state.currentMapCenterLong }}\r\n                isPulseVisible={this.state.isPulseVisible}\r\n                pulseGeopoint={this.state.pulseGeopoint}\r\n              />\r\n\r\n            </div>\r\n\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {/* <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n              <ToggleButton value={1}>LATEST</ToggleButton>\r\n              <ToggleButton value={2}>MOST UPVOTED</ToggleButton>\r\n            </ToggleButtonGroup> */}\r\n\r\n            <br /><br />\r\n\r\n            <div style={{ textAlign: 'center' }}>\r\n              <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\" disableElevation>\r\n                <Button onClick={() => { this.handleMultiChange('location') }} color={this.state.multiActive === 'location' ? 'primary' : 'default'} disableElevation><LocationOn style={{ fontSize: null }} /></Button>\r\n                <Button onClick={() => { this.handleMultiChange('latest') }} color={this.state.multiActive === 'latest' ? 'primary' : 'default'} disableElevation>LATEST</Button>\r\n                <Button onClick={() => { this.handleMultiChange('popular') }} color={this.state.multiActive === 'popular' ? 'primary' : 'default'} disableElevation>POPULAR</Button>\r\n                <Button onClick={() => { this.handleMultiChange('gallery') }} color={this.state.multiActive === 'gallery' ? 'primary' : 'default'} disableElevation>GALLERY</Button>\r\n              </ButtonGroup>\r\n            </div>\r\n\r\n            <br /><br />\r\n\r\n            {/* {!this.state.selectedLocation && <div style={{ display: 'inline-flex', width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }}><h3><LocationOn style={{ fontSize: 80 }} />Click on a marker to show its details.</h3></div>} */}\r\n            {this.multiGenerator()}\r\n\r\n            {/* {this.state.selectedLocation && this.state.multiActive === 'location' && <LocationDetails selectedLocation={this.state.selectedLocation} />}\r\n            {this.state.multiActive === 'latest' && <LatestSubmissions locations={this.state.locations} />}\r\n            {this.state.multiActive === 'popular' && <PopularSubmissions locations={this.state.locations} />}\r\n            {this.state.multiActive === 'gallery' && <Masonry locations={this.state.locations} />} */}\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n        <br /> <br />\r\n\r\n        <section className=\"add-item\">\r\n\r\n\r\n          {/* <Form onSubmit={this.handleSubmit} inline={false}> */}\r\n\r\n          {/*\r\n          <Form inline={false}>\r\n            <Container fluid={true}>\r\n\r\n              <Row>\r\n                <Col xs=\"auto\">\r\n                  STEP<br />\r\n                  1\r\n              </Col>\r\n                <Col xs={2}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>LATITUDE / LONGITUDE</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"pendingLatitude\" placeholder=\"latitude\" onChange={this.handleChange} value={this.state.pendingLatitude + ', ' + this.state.pendingLongitude} />\r\n                    <Form.Text className=\"text-muted\">\r\n                      Click on the map to automatically fill in the lat/long coordinates.\r\n    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  STEP<br />\r\n                  2\r\n              </Col>\r\n                <Col xs={2}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>VISUAL TYPE</Form.Label>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Visual Type\" variant=\"primary\">\r\n                      <Dropdown.Item href=\"#/action-1\">business card</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-1\">chalk</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-2\">sharpie</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-3\">paint / permanent marker</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-3\">sticker</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-3\">poster</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-3\">mural</Dropdown.Item>\r\n                      <Dropdown.Item href=\"#/action-3\">other</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <Form.Text className=\"text-muted\">\r\n                      Select which category best describes your medium.\r\n    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  STEP<br />\r\n                  3\r\n              </Col>\r\n\r\n                <Col xs={2}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>LOCATION NAME / DESCRIPTION</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"pendingLocationNameDescription\" placeholder=\"location name / description\" onChange={this.handleChange} value={this.state.pendingLocationNameDescription} />\r\n                    <Form.Text className=\"text-muted\">\r\n                      example: Space Needle, Pike Place Market, Fremont Troll\r\n    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col xs=\"auto\">\r\n                  STEP<br />\r\n                  4\r\n              </Col>\r\n                <Col xs={1}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>PIC / VIDEO</Form.Label>\r\n\r\n                    <input type=\"file\" id=\"fileSelector\"></input>\r\n\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col xs=\"auto\">\r\n                  STEP<br />\r\n                  5\r\n              </Col>\r\n                <Col xs={1}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>&nbsp;</Form.Label>\r\n                    <br />\r\n\r\n\r\n                    <Button onClick={this.handleSubmit} variant=\"success\" size=\"lg\">SUBMIT LOCATION</Button>\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n\r\n              </Row>\r\n            </Container>\r\n\r\n          </Form>\r\n        */}\r\n          <h2><LocationOn style={{ fontSize: 80 }} />ADD LOCATION</h2>\r\n          <LocationSubmitter\r\n            db={db}\r\n            storageRef={storageRef}\r\n            pendingLatitude={this.state.pendingLatitude}\r\n            pendingLongitude={this.state.pendingLongitude}\r\n            pendingLocationNameDescription={this.state.pendingLocationNameDescription}\r\n\r\n            handlePendingLatLongChange={this.handlePendingLatLongChange}\r\n            handlePendingLocationNameDescription={this.handlePendingLocationNameDescription}\r\n          />\r\n\r\n        </section>\r\n\r\n        <br /> <br />\r\n\r\n        {/* <p>🗺️ CENTER MAP TO YOUR LOCATION</p> */}\r\n\r\n        <button onClick={this.getLocation}>🗺️ CENTER MAP TO YOUR LOCATION</button>\r\n\r\n        <p id=\"demo\"></p>\r\n\r\n        <br /> <br />\r\n\r\n        <hr className=\"style3\" style={{ width: hrWidth }} ></hr>\r\n\r\n        <br /> <br />\r\n\r\n        <footer>\r\n          <Row>\r\n            <Col xs={4}>\r\n              <h3>What is NLNRF?</h3>\r\n              <p>NLNRF is an acronym for \"Not left. Not right. Forward.\" It's a great slogan for uniting people to tackle the problems Andrew Yang is focused on solving world problems such as mass job displace due to automation, the ever-widening income inequality gap, and climate change.</p>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <h3>How can I help spread the NLNRF message?</h3>\r\n              <p>\r\n                <ol>\r\n                  <li>Chalk, sticker, sharpie, graffiti the slogan \"Not left. Not right. Forward.\" on surfaces where as much people will see! Use the map above to figure out where high trafficed or underrepresented locations are.</li>\r\n                  <li>And then post your work to this site!</li>\r\n                  <li>Reach out to new people and encourage them to spread the NLNRF message!</li>\r\n                  <li>If you're a programmer/developer, check out the To-Do List below, communicate an choose a task to work on, pair program with Brent if necessary, and then submit a pull request. <a href=\"https://github.com/BrentLabasan/NLNRF\" target=\"_blank\">GitHub</a></li>\r\n                </ol>\r\n              </p>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <h3>Tell me more about Andrew Yang.</h3>\r\n              <p>Andrew Yang is a former Democratic presidential candidate (2020) and CNN political commentator,  focused on solving world problems such as mass job displace due to automation, the ever-widening income inequality gap, and climate change.</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <h4>To-Do List</h4>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={3}>\r\n              <h5>Functional</h5>\r\n              <ul>\r\n                <li>create mobile-friendly layout <Badge variant=\"light\">NOT STARTED</Badge> <Badge variant=\"danger\">HIGHEST PRIORITY</Badge> </li>\r\n                <li>submit imgur, YouTube, Instagram media</li>\r\n                {/* <li></li> */}\r\n              </ul>\r\n            </Col>\r\n\r\n            <Col xs={3}>\r\n              <h5>Social</h5>\r\n              <ul>\r\n                <li>implement user account system <Badge variant=\"light\">NOT STARTED</Badge></li>\r\n                <li>users can favorite their favorite NLNRF locations <Badge variant=\"light\">NOT STARTED</Badge></li>\r\n                <li>users can upvote an NLNRF location <Badge variant=\"light\">NOT STARTED</Badge></li>\r\n              </ul>\r\n            </Col>\r\n\r\n            <Col xs={3}>\r\n              <h5>Cosmetic</h5>\r\n              <ul>\r\n                <li>Is the blue color scheme good? <Badge variant=\"light\">NOT STARTED</Badge></li>\r\n                {/* <li></li>\r\n                <li></li> */}\r\n              </ul>\r\n            </Col>\r\n\r\n            <Col xs={3}>\r\n              <h5>Underneath The Hood</h5>\r\n              <ul>\r\n                <li>The app is one big component. Separate the components into separate, especially because even simple actions like clicking on the map or typing one letter for the location description causes map and NLNRF locations to re-render. <Badge variant=\"light\">NOT STARTED</Badge></li>\r\n                {/* <li></li>\r\n                <li></li> */}\r\n              </ul>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <section id=\"byline\">\r\n            <h6>\r\n              NLNRF was designed and developed by <a href=\"BrentVLabasan.com\" target=\"_blank\">Brent Labasan X&gt;</a>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              If you would like to help Brent work on NLNRF.com, contact him at BrentLabasan@gmail.com or @BrentLabasan <a href=\"https://github.com/BrentLabasan/NLNRF\" target=\"_blank\">GitHub</a>\r\n            </h6>\r\n          </section>\r\n\r\n          <br /><br />\r\n\r\n          <section id=\"logos\">\r\n            <img src={CrossUnite} className=\"\" alt=\"\" style={{ maxHeight: '50px' }} />\r\n\r\n            <a href=\"https://FabricatorMusic.com\" className=\"FabricatorMusic\" target=\"_blank\">\r\n              <span className=\"FabricatorMusic\">Fabricator Music</span>\r\n            </a>\r\n\r\n            <img src={PoopAndNeedles} className=\"\" alt=\"\" style={{ maxHeight: '50px' }} />\r\n\r\n\r\n          </section>\r\n\r\n        </footer>\r\n\r\n        <BottomNavigation value={this.state.mobiCurrentSection} onChange={this.handleMobiCurrSectionChange} className={null}>\r\n          <BottomNavigationAction label=\"Add Location\" value=\"add\" icon={<AddLocation />} />\r\n          <BottomNavigationAction label=\"Latest\" value=\"latest\" icon={<Photo />} />\r\n          <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<Favorite />} />\r\n          <BottomNavigationAction label=\"Account\" value=\"account\" icon={<AccountCircle />} />\r\n        </BottomNavigation>\r\n\r\n\r\n      </div >\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: constants.GMAP_API_KEY\r\n})(MapContainer);","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, Polygon } from 'google-maps-react';\r\nimport * as constants from './constants';\r\nimport pulsing from './media/pulsing3.gif';\r\nimport wut from './media/wut.gif';\r\nvar _ = require('lodash');\r\n\r\nexport class GoogleMap extends Component {\r\n\r\n  state = {\r\n    locations: [],\r\n    centerLat: null,\r\n    centerLong: null,\r\n\r\n    currentMapCenterLat: 47.61785407164923,\r\n    currentMapCenterLong: -122.31657144387441,\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    // this.setState({\r\n    //   selectedPlace: props,\r\n    //   activeMarker: marker,\r\n    //   showingInfoWindow: true\r\n    // });\r\n    // debugger;\r\n    this.props.handleMapMarkerClick(props, marker, e);\r\n  }\r\n\r\n  mapClicked = (mapProps, map, clickEvent) => {\r\n    // console.log(mapProps);\r\n    // console.log(map);\r\n    console.log(clickEvent);\r\n    // console.log(clickEvent.Za.x, clickEvent.Za.y);\r\n    console.log(clickEvent.latLng.lat(), clickEvent.latLng.lng());\r\n\r\n    // this.setState({\r\n    //   pendingLatitude: clickEvent.latLng.lat(),\r\n    //   pendingLongitude: clickEvent.latLng.lng()\r\n    // });\r\n\r\n    this.props.handlePendingLatLongChange(clickEvent.latLng.lat(), clickEvent.latLng.lng());\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !_.isEqual(this.props.locations, nextProps.locations) || this.props.currentMapCenter.lat === nextProps.currentMapCenter.lat;\r\n    // return nextProps.isFavourite != this.props.isFavourite;\r\n  }\r\n\r\n  render() {\r\n    console.log('GoogleMap.js render()');\r\n    let locations = this.props.locations.map((loc) => {\r\n\r\n      // const animationStyle = loc.id === this.state.featuredLocationId ? this.props.google.maps.Animation.DROP : false;\r\n\r\n      return (\r\n        <Marker\r\n          key={loc.geopoint.latitude + \"_\" + loc.geopoint.longitude}\r\n          title={loc.nameDescr}\r\n          name={'SOMA'}\r\n          position={{ lat: loc.geopoint.latitude, lng: loc.geopoint.longitude }}\r\n          onClick={this.onMarkerClick}\r\n\r\n          locationInfo={loc}\r\n\r\n          // animation={false}\r\n          // animation={this.props.google.maps.Animation.DROP}\r\n          animation={false}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={13}\r\n          style={\r\n            {\r\n              width: '90%',\r\n              height: '800px'\r\n            }\r\n          }\r\n          initialCenter={{\r\n            lat: constants.DEFAULT_MAP_CENTER.LAT,\r\n            lng: constants.DEFAULT_MAP_CENTER.LONG\r\n          }}\r\n          center={{\r\n            lat: this.props.currentMapCenter.lat,\r\n            lng: this.props.currentMapCenter.long\r\n          }}\r\n          onClick={this.mapClicked}\r\n        >\r\n           \r\n          {locations}\r\n\r\n          { this.props.isPulseVisible && <Marker\r\n            name={'Your position'}\r\n            position={{ lat: this.props.pulseGeopoint.latitude, lng: this.props.pulseGeopoint.longitude }}\r\n            icon={{\r\n              // url: 'https://loading.io/icon/i3ca9h',\r\n              url: pulsing, // works\r\n              // url: wut, // works\r\n              anchor: new this.props.google.maps.Point(64, 64),\r\n              scaledSize: new this.props.google.maps.Size(128, 128)\r\n            }}\r\n          /> }\r\n\r\n          {/* <Polygon\r\n            paths={constants.TEST_COORDS}\r\n            strokeColor=\"#0000FF\"\r\n            strokeOpacity={0.8}\r\n            strokeWeight={2}\r\n            fillColor=\"#0000FF\"\r\n            fillOpacity={0.35} /> */}\r\n\r\n        </Map>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: constants.GMAP_API_KEY\r\n})(GoogleMap);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pulsing3.ffd5e84b.gif\";","module.exports = __webpack_public_path__ + \"static/media/xu.8685941e.png\";","module.exports = __webpack_public_path__ + \"static/media/poopandneedles.da690e49.png\";"],"sourceRoot":""}